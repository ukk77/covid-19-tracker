{"version":3,"sources":["Components/MUI_Card.js","App.js","reportWebVitals.js","index.js"],"names":["MUI_Card","props","classes","makeStyles","root","minWidth","textAlign","bullet","display","margin","transform","title","fontSize","pos","marginBottom","useStyles","Card","className","CardContent","Typography","color","label","variant","component","today","total","App","useState","countryData","setCountrydata","countries","setCountries","currentCountry","setCurrentcountry","activeCases","setActivecases","React","useEffect","a","fetch","then","res","json","data","map","country","name","value","countryInfo","iso2","active","getData","onCountryChange","e","target","getCountryData","countryCode","console","log","theme","formControl","spacing","selectEmpty","marginTop","table","width","container","maxHeight","InputLabel","FormControl","Select","onChange","MenuItem","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths","labels","datasets","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","height","options","maintainAspectRatio","Paper","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","row","scope","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a89784b4.chunk.js","sourcesContent":["import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nfunction MUI_Card(props) {\r\n    \r\n    const useStyles = makeStyles({\r\n        root: {\r\n          minWidth: 250,\r\n          textAlign: 'center'\r\n        },\r\n        bullet: {\r\n          display: 'inline-block',\r\n          margin: '0 2px',\r\n          transform: 'scale(0.8)',\r\n        },\r\n        title: {\r\n          fontSize: 14,\r\n        },\r\n        pos: {\r\n          marginBottom: 6,\r\n        },\r\n      });\r\n    \r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                        {props.label}\r\n                    </Typography>\r\n                    \r\n                    <Typography className={classes.pos} variant=\"h5\" component=\"h2\" >\r\n                        {props.today + \" today\"} \r\n                    </Typography>\r\n                    \r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                        {props.total + \" total\"}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MUI_Card\r\n","/* eslint-disable react/jsx-pascal-case */\nimport './App.css';\nimport React, { useEffect, useState } from 'react'\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MUI_Card from './Components/MUI_Card'\nimport {Bar} from 'react-chartjs-2';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\n\n\nfunction App() {\n  let api_url = \"https://disease.sh/v3/covid-19/countries\";\n  const [countryData, setCountrydata] = useState({ })\n  const [countries, setCountries] = useState([])\n  const [currentCountry, setCurrentcountry] = useState(\"worldwide\")\n  const [activeCases, setActivecases] = useState([ ])\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n\n  useEffect(() => {\n      const getData = async () => {\n        await fetch(api_url)\n        .then(res => res.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2 \n          }))\n          setCountries(countries)\n\n          const activeCases = data.map((country) => ({\n            name: country.country,\n            active: country.active\n          }))\n          setActivecases(activeCases)\n\n        })\n\n        await fetch(\"https://disease.sh/v3/covid-19/all\")\n        .then(res => res.json())\n        .then(data => {\n          setCountrydata(data)\n        })\n      }\n      getData();\n    }, [])\n\n  \n  const onCountryChange = async (e) => {\n    setCurrentcountry(e.target.value)\n\n    if(e.target.value === \"worldwide\"){\n      await fetch(\"https://disease.sh/v3/covid-19/all\")\n        .then(res => res.json())\n        .then(data => {\n          setCountrydata(data)\n        })\n    }\n    else{\n      await getCountryData(e.target.value)\n    }\n  }\n\n\n  const getCountryData = async (countryCode) => {\n    await fetch(\"https://disease.sh/v3/covid-19/countries/\" + countryCode)\n        .then(res => res.json())\n        .then(data => {\n          console.log(data)\n          setCountrydata(data)\n        })\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 150,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    table: {\n      minWidth: 500,\n    },\n    root: {\n      width: '100%',\n    },\n    container: {\n      maxHeight: 300,\n      \n    },\n  }));\n  \n  const classes = useStyles();\n\n  return (\n    <div className=\"App\">\n\n      <div className=\"title-and-cards\">\n        <div className=\"title\">\n          COVID-19 TRACKER\n        </div>\n\n        <div className=\"country-select\">\n          <InputLabel>Country</InputLabel>\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <Select\n              value={currentCountry}\n              onChange={onCountryChange}\n              label = \"Country\"\n            >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>\n                  {country.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n      </div>\n\n      <div className=\"cards\">\n\n        <div className=\"total-cases card\">\n                <MUI_Card\n                  label=\"Covid Cases\" \n                  today = {countryData.todayCases}\n                  total = {countryData.cases}\n                />\n        </div>\n                \n        <div className=\"total-recovered card\">\n                <MUI_Card\n                  label=\"Recovered\" \n                  today = {countryData.todayRecovered}\n                  total = {countryData.recovered}\n                />\n        </div>\n\n        <div className=\"total-deaths card\">\n                <MUI_Card\n                label=\"Deaths\"\n                today = {countryData.todayDeaths}\n                total = {countryData.deaths}\n                />\n        </div>\n\n      </div>\n\n      <div className=\"charts-and-table\">\n      \n      <div className=\"charts\">\n      <h2>Covid data chart</h2>\n      <Bar\n        data={  \n          {\n            labels: ['Cases', 'Cases today', 'Recovered', 'Recovered today', 'Deaths', 'Deaths today'],\n            datasets: [\n              {\n                label: 'Covid tracking',\n                backgroundColor: 'rgba(255,99,132,0.2)',\n                borderColor: 'rgba(255,99,132,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n                hoverBorderColor: 'rgba(255,99,132,1)',\n                data: [countryData.cases, countryData.todayCases, countryData.recovered, countryData.todayRecovered,\n                  countryData.deaths, countryData.todayDeaths]\n              }\n            ]\n          }\n          }\n        width={500}\n        height={200}\n        options={{\n          maintainAspectRatio: false\n        }}\n      />\n      </div>\n      \n      <div className=\"table\">\n      <h2>Active cases by country</h2>\n\n      <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Country</TableCell>\n            <TableCell align=\"center\">Active cases</TableCell>\n          </TableRow>\n        </TableHead>    \n\n        <TableBody>\n        {\n          activeCases.map((row) => (\n          <TableRow key={row.name}>\n            <TableCell component=\"th\" scope=\"row\">\n              {row.name}\n            </TableCell>\n            <TableCell align=\"center\">{row.active}</TableCell>\n          </TableRow>\n          ))\n        }\n        </TableBody>\n\n        </Table>\n      </TableContainer>\n      \n        </Paper>\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}